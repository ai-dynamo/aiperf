# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
########################################################################
## üö©                     mkinit flags                             üö© ##
########################################################################
__ignore__ = ["logger"]
########################################################################
## ‚ö†Ô∏è        This file is auto-generated by mkinit                 ‚ö†Ô∏è ##
## ‚ö†Ô∏è             Do not edit below this line                      ‚ö†Ô∏è ##
########################################################################
from aiperf.common.aiperf_logger import (
    AIPerfLogger,
)
from aiperf.common.bootstrap import (
    bootstrap_and_run_service,
)
from aiperf.common.comms import (
    MAX_PUSH_RETRIES,
    RETRY_DELAY_INTERVAL_SEC,
    BaseCommunication,
    BaseZMQClient,
    BaseZMQCommunication,
    BaseZMQProxy,
    ClientProtocolT,
    CommunicationClientFactory,
    CommunicationClientProtocol,
    CommunicationClientProtocolFactory,
    CommunicationFactory,
    MessageOutputT,
    MessageT,
    ProxyEndType,
    ProxySocketClient,
    PubClientProtocol,
    PullClientProtocol,
    PushClientProtocol,
    ReplyClientProtocol,
    RequestClientProtocol,
    SubClientProtocol,
    ZMQDealerRequestClient,
    ZMQDealerRouterProxy,
    ZMQIPCCommunication,
    ZMQProxyFactory,
    ZMQPubClient,
    ZMQPullClient,
    ZMQPushClient,
    ZMQPushPullProxy,
    ZMQRouterReplyClient,
    ZMQSocketDefaults,
    ZMQSubClient,
    ZMQTCPCommunication,
    ZMQXPubXSubProxy,
    create_proxy_socket_class,
    define_proxy_class,
)
from aiperf.common.config import (
    ADD_TO_TEMPLATE,
    AudioConfig,
    AudioDefaults,
    AudioLengthConfig,
    BaseConfig,
    BaseZMQCommunicationConfig,
    BaseZMQProxyConfig,
    CLIDefaults,
    ConversationConfig,
    ConversationDefaults,
    EndPointConfig,
    EndPointDefaults,
    ImageConfig,
    ImageDefaults,
    ImageHeightConfig,
    ImageWidthConfig,
    InputConfig,
    InputDefaults,
    InputTokensConfig,
    InputTokensDefaults,
    LoadGeneratorConfig,
    LoadGeneratorDefaults,
    MeasurementConfig,
    MeasurementDefaults,
    OutputConfig,
    OutputDefaults,
    OutputTokenDefaults,
    OutputTokensConfig,
    OutputTokensDefaults,
    PrefixPromptConfig,
    PrefixPromptDefaults,
    PromptConfig,
    PromptDefaults,
    ServiceConfig,
    ServiceDefaults,
    SweepConfig,
    SweepParam,
    TokenizerConfig,
    TokenizerDefaults,
    TurnConfig,
    TurnDefaults,
    TurnDelayConfig,
    TurnDelayDefaults,
    UserConfig,
    UserDefaults,
    WorkersConfig,
    WorkersDefaults,
    ZMQIPCConfig,
    ZMQIPCProxyConfig,
    ZMQTCPConfig,
    ZMQTCPProxyConfig,
    load_service_config,
    load_user_config,
    parse_file,
    parse_goodput,
    parse_service_types,
    parse_str_or_csv_list,
    parse_str_or_dict,
    parse_str_or_list,
    parse_str_or_list_of_positive_values,
    print_str_or_list,
)
from aiperf.common.constants import (
    BYTES_PER_MIB,
    DEFAULT_COMMS_REQUEST_TIMEOUT,
    GRACEFUL_SHUTDOWN_TIMEOUT_SECONDS,
    NANOS_PER_MILLIS,
    NANOS_PER_SECOND,
    TASK_CANCEL_TIMEOUT_LONG,
    TASK_CANCEL_TIMEOUT_SHORT,
)
from aiperf.common.enums import (
    AIPerfLogLevel,
    AudioFormat,
    BenchmarkSuiteCompletionTrigger,
    BenchmarkSuiteType,
    CaseInsensitiveStrEnum,
    CommandResponseStatus,
    CommandType,
    CommunicationBackend,
    CommunicationClientAddressType,
    CommunicationClientType,
    ComposerType,
    CreditPhase,
    CustomDatasetType,
    DataExporterType,
    EndpointType,
    ImageFormat,
    MeasurementMode,
    MessageType,
    MetricTimeType,
    MetricType,
    Modality,
    ModelSelectionStrategy,
    NotificationType,
    PostProcessorType,
    PromptSource,
    RequestRateMode,
    ResponsePayloadType,
    ServiceRegistrationStatus,
    ServiceRunType,
    ServiceState,
    ServiceType,
    SSEEventType,
    SSEFieldType,
    StreamingPostProcessorType,
    SystemState,
    TimingMode,
    ZMQProxyType,
)
from aiperf.common.exceptions import (
    AIPerfError,
    AIPerfMultiError,
    CommunicationError,
    ConfigurationError,
    DatasetError,
    DatasetGeneratorError,
    FactoryCreationError,
    InferenceClientError,
    InitializationError,
    InvalidPayloadError,
    InvalidStateError,
    MetricTypeError,
    NotFoundError,
    NotInitializedError,
    ProxyError,
    ServiceError,
    ShutdownError,
    UnsupportedHookError,
    ValidationError,
)
from aiperf.common.factories import (
    ClassEnumT,
    ClassProtocolT,
    ComposerFactory,
    CustomDatasetFactory,
    DataExporterFactory,
    FactoryMixin,
    PostProcessorFactory,
    ServiceFactory,
    StreamingPostProcessorFactory,
)
from aiperf.common.hooks import (
    AIPERF_HOOK_TYPE,
    AIPerfHook,
    AIPerfTaskHook,
    HookSystem,
    HookType,
    aiperf_auto_task,
    aiperf_task,
    hook_decorator,
    on_cleanup,
    on_configure,
    on_init,
    on_profile_configure,
    on_profile_start,
    on_profile_stop,
    on_run,
    on_set_state,
    on_start,
    on_stop,
    supports_hooks,
)
from aiperf.common.interfaces import (
    DataExporterProtocol,
    PostProcessorProtocol,
    ResponseExtractor,
)
from aiperf.common.logging import (
    LOG_QUEUE_MAXSIZE,
    MultiProcessLogHandler,
    create_file_handler,
    get_global_log_queue,
    setup_child_process_logging,
    setup_rich_logging,
)
from aiperf.common.messages import (
    BaseServiceErrorMessage,
    BaseServiceMessage,
    BaseStatusMessage,
    CommandMessage,
    CommandResponseMessage,
    ConversationRequestMessage,
    ConversationResponseMessage,
    ConversationTurnRequestMessage,
    ConversationTurnResponseMessage,
    CreditDropMessage,
    CreditPhaseCompleteMessage,
    CreditPhaseProgressMessage,
    CreditPhaseSendingCompleteMessage,
    CreditPhaseStartMessage,
    CreditReturnMessage,
    CreditsCompleteMessage,
    DatasetConfiguredNotification,
    DatasetTimingRequest,
    DatasetTimingResponse,
    ErrorMessage,
    HeartbeatMessage,
    InferenceResultsMessage,
    Message,
    NotificationMessage,
    ParsedInferenceResultsMessage,
    ProcessingStatsMessage,
    ProcessRecordsCommandData,
    ProfileProgressMessage,
    ProfileResultsMessage,
    RecordsProcessingStatsMessage,
    RegistrationMessage,
    RequiresRequestNSMixin,
    StatusMessage,
    SweepProgressMessage,
    WorkerHealthMessage,
)
from aiperf.common.mixins import (
    AIPerfLifecycleMixin,
    AIPerfLoggerMixin,
    AIPerfLoggerProtocol,
    AIPerfProfileMixin,
    AIPerfTaskMixin,
    AsyncTaskManagerMixin,
    AsyncTaskManagerProtocol,
    BaseMixin,
    HooksMixin,
    ProcessHealthMixin,
)
from aiperf.common.models import (
    AIPerfBaseModel,
    Audio,
    BaseModelT,
    Conversation,
    CPUTimes,
    CreditPhaseConfig,
    CreditPhaseStats,
    CtxSwitches,
    ErrorDetails,
    ErrorDetailsCount,
    ExcludeIfNoneMixin,
    Image,
    InferenceServerResponse,
    IOCounters,
    MetricResult,
    ParsedResponseRecord,
    PhaseProcessingStats,
    ProcessHealth,
    RequestRecord,
    ResponseData,
    ServiceRunInfo,
    SSEField,
    SSEMessage,
    Text,
    TextResponse,
    Turn,
    WorkerPhaseTaskStats,
    exclude_if_none,
)
from aiperf.common.service import (
    BaseComponentService,
    BaseControllerService,
    BaseService,
    BaseServiceInterface,
)
from aiperf.common.tokenizer import (
    Tokenizer,
)
from aiperf.common.types import (
    ConfigT,
    InputT,
    OutputT,
    RawRequestT,
    RawResponseT,
    RequestInputT,
    RequestOutputT,
    ResponseT,
)
from aiperf.common.utils import (
    call_all_functions,
    call_all_functions_self,
    load_json_str,
    yield_to_event_loop,
)

__all__ = [
    "ADD_TO_TEMPLATE",
    "AIPERF_HOOK_TYPE",
    "AIPerfBaseModel",
    "AIPerfError",
    "AIPerfHook",
    "AIPerfLifecycleMixin",
    "AIPerfLogLevel",
    "AIPerfLogger",
    "AIPerfLoggerMixin",
    "AIPerfLoggerProtocol",
    "AIPerfMultiError",
    "AIPerfProfileMixin",
    "AIPerfTaskHook",
    "AIPerfTaskMixin",
    "AsyncTaskManagerMixin",
    "AsyncTaskManagerProtocol",
    "Audio",
    "AudioConfig",
    "AudioDefaults",
    "AudioFormat",
    "AudioLengthConfig",
    "BYTES_PER_MIB",
    "BaseCommunication",
    "BaseComponentService",
    "BaseConfig",
    "BaseControllerService",
    "BaseMixin",
    "BaseModelT",
    "BaseService",
    "BaseServiceErrorMessage",
    "BaseServiceInterface",
    "BaseServiceMessage",
    "BaseStatusMessage",
    "BaseZMQClient",
    "BaseZMQCommunication",
    "BaseZMQCommunicationConfig",
    "BaseZMQProxy",
    "BaseZMQProxyConfig",
    "BenchmarkSuiteCompletionTrigger",
    "BenchmarkSuiteType",
    "CLIDefaults",
    "CPUTimes",
    "CaseInsensitiveStrEnum",
    "ClassEnumT",
    "ClassProtocolT",
    "ClientProtocolT",
    "CommandMessage",
    "CommandResponseMessage",
    "CommandResponseStatus",
    "CommandType",
    "CommunicationBackend",
    "CommunicationClientAddressType",
    "CommunicationClientFactory",
    "CommunicationClientProtocol",
    "CommunicationClientProtocolFactory",
    "CommunicationClientType",
    "CommunicationError",
    "CommunicationFactory",
    "ComposerFactory",
    "ComposerType",
    "ConfigT",
    "ConfigurationError",
    "Conversation",
    "ConversationConfig",
    "ConversationDefaults",
    "ConversationRequestMessage",
    "ConversationResponseMessage",
    "ConversationTurnRequestMessage",
    "ConversationTurnResponseMessage",
    "CreditDropMessage",
    "CreditPhase",
    "CreditPhaseCompleteMessage",
    "CreditPhaseConfig",
    "CreditPhaseProgressMessage",
    "CreditPhaseSendingCompleteMessage",
    "CreditPhaseStartMessage",
    "CreditPhaseStats",
    "CreditReturnMessage",
    "CreditsCompleteMessage",
    "CtxSwitches",
    "CustomDatasetFactory",
    "CustomDatasetType",
    "DEFAULT_COMMS_REQUEST_TIMEOUT",
    "DataExporterFactory",
    "DataExporterProtocol",
    "DataExporterType",
    "DatasetConfiguredNotification",
    "DatasetError",
    "DatasetGeneratorError",
    "DatasetTimingRequest",
    "DatasetTimingResponse",
    "EndPointConfig",
    "EndPointDefaults",
    "EndpointType",
    "ErrorDetails",
    "ErrorDetailsCount",
    "ErrorMessage",
    "ExcludeIfNoneMixin",
    "FactoryCreationError",
    "FactoryMixin",
    "GRACEFUL_SHUTDOWN_TIMEOUT_SECONDS",
    "HeartbeatMessage",
    "HookSystem",
    "HookType",
    "HooksMixin",
    "IOCounters",
    "Image",
    "ImageConfig",
    "ImageDefaults",
    "ImageFormat",
    "ImageHeightConfig",
    "ImageWidthConfig",
    "InferenceClientError",
    "InferenceResultsMessage",
    "InferenceServerResponse",
    "InitializationError",
    "InputConfig",
    "InputDefaults",
    "InputT",
    "InputTokensConfig",
    "InputTokensDefaults",
    "InvalidPayloadError",
    "InvalidStateError",
    "LOG_QUEUE_MAXSIZE",
    "LoadGeneratorConfig",
    "LoadGeneratorDefaults",
    "MAX_PUSH_RETRIES",
    "MeasurementConfig",
    "MeasurementDefaults",
    "MeasurementMode",
    "Message",
    "MessageOutputT",
    "MessageT",
    "MessageType",
    "MetricResult",
    "MetricTimeType",
    "MetricType",
    "MetricTypeError",
    "Modality",
    "ModelSelectionStrategy",
    "MultiProcessLogHandler",
    "NANOS_PER_MILLIS",
    "NANOS_PER_SECOND",
    "NotFoundError",
    "NotInitializedError",
    "NotificationMessage",
    "NotificationType",
    "OutputConfig",
    "OutputDefaults",
    "OutputT",
    "OutputTokenDefaults",
    "OutputTokensConfig",
    "OutputTokensDefaults",
    "ParsedInferenceResultsMessage",
    "ParsedResponseRecord",
    "PhaseProcessingStats",
    "PostProcessorFactory",
    "PostProcessorProtocol",
    "PostProcessorType",
    "PrefixPromptConfig",
    "PrefixPromptDefaults",
    "ProcessHealth",
    "ProcessHealthMixin",
    "ProcessRecordsCommandData",
    "ProcessingStatsMessage",
    "ProfileProgressMessage",
    "ProfileResultsMessage",
    "PromptConfig",
    "PromptDefaults",
    "PromptSource",
    "ProxyEndType",
    "ProxyError",
    "ProxySocketClient",
    "PubClientProtocol",
    "PullClientProtocol",
    "PushClientProtocol",
    "RETRY_DELAY_INTERVAL_SEC",
    "RawRequestT",
    "RawResponseT",
    "RecordsProcessingStatsMessage",
    "RegistrationMessage",
    "ReplyClientProtocol",
    "RequestClientProtocol",
    "RequestInputT",
    "RequestOutputT",
    "RequestRateMode",
    "RequestRecord",
    "RequiresRequestNSMixin",
    "ResponseData",
    "ResponseExtractor",
    "ResponsePayloadType",
    "ResponseT",
    "SSEEventType",
    "SSEField",
    "SSEFieldType",
    "SSEMessage",
    "ServiceConfig",
    "ServiceDefaults",
    "ServiceError",
    "ServiceFactory",
    "ServiceRegistrationStatus",
    "ServiceRunInfo",
    "ServiceRunType",
    "ServiceState",
    "ServiceType",
    "ShutdownError",
    "StatusMessage",
    "StreamingPostProcessorFactory",
    "StreamingPostProcessorType",
    "SubClientProtocol",
    "SweepConfig",
    "SweepParam",
    "SweepProgressMessage",
    "SystemState",
    "TASK_CANCEL_TIMEOUT_LONG",
    "TASK_CANCEL_TIMEOUT_SHORT",
    "Text",
    "TextResponse",
    "TimingMode",
    "Tokenizer",
    "TokenizerConfig",
    "TokenizerDefaults",
    "Turn",
    "TurnConfig",
    "TurnDefaults",
    "TurnDelayConfig",
    "TurnDelayDefaults",
    "UnsupportedHookError",
    "UserConfig",
    "UserDefaults",
    "ValidationError",
    "WorkerHealthMessage",
    "WorkerPhaseTaskStats",
    "WorkersConfig",
    "WorkersDefaults",
    "ZMQDealerRequestClient",
    "ZMQDealerRouterProxy",
    "ZMQIPCCommunication",
    "ZMQIPCConfig",
    "ZMQIPCProxyConfig",
    "ZMQProxyFactory",
    "ZMQProxyType",
    "ZMQPubClient",
    "ZMQPullClient",
    "ZMQPushClient",
    "ZMQPushPullProxy",
    "ZMQRouterReplyClient",
    "ZMQSocketDefaults",
    "ZMQSubClient",
    "ZMQTCPCommunication",
    "ZMQTCPConfig",
    "ZMQTCPProxyConfig",
    "ZMQXPubXSubProxy",
    "aiperf_auto_task",
    "aiperf_task",
    "bootstrap_and_run_service",
    "call_all_functions",
    "call_all_functions_self",
    "create_file_handler",
    "create_proxy_socket_class",
    "define_proxy_class",
    "exclude_if_none",
    "get_global_log_queue",
    "hook_decorator",
    "load_json_str",
    "load_service_config",
    "load_user_config",
    "on_cleanup",
    "on_configure",
    "on_init",
    "on_profile_configure",
    "on_profile_start",
    "on_profile_stop",
    "on_run",
    "on_set_state",
    "on_start",
    "on_stop",
    "parse_file",
    "parse_goodput",
    "parse_service_types",
    "parse_str_or_csv_list",
    "parse_str_or_dict",
    "parse_str_or_list",
    "parse_str_or_list_of_positive_values",
    "print_str_or_list",
    "setup_child_process_logging",
    "setup_rich_logging",
    "supports_hooks",
    "yield_to_event_loop",
]
