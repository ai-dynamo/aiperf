# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0  # Use the latest stable version
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=5000']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-json
        exclude: ^\.devcontainer/devcontainer\.json$
      - id: check-toml
      - id: check-yaml
      - id: check-shebang-scripts-are-executable
      - id: end-of-file-fixer
        types_or: [cuda, proto, textproto, python]
      - id: mixed-line-ending
      - id: no-commit-to-branch
        args: [--branch, main]
      - id: requirements-txt-fixer
      - id: trailing-whitespace
  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.11.8
    hooks:
      # Run the linter.
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi]
      # Run the formatter.
      - id: ruff-format
        types_or: [python, pyi]
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.4
    hooks:
    - id: codespell
      additional_dependencies: [tomli]
      args: ["--toml", "pyproject.toml"]
      exclude: (?x)^(.*stemmer.*|.*stop_words.*|^CHANGELOG.md$|.*shakespeare.txt)
  - repo: local
    hooks:
    - id: add-license
      name: Add License
      entry: python tools/add_copyright.py
      language: python
      require_serial: true
    # Run mkinit to generate the __init__.py files
    - id: mkinit enums
      name: Run mkinit enums
      entry: mkinit
      language: system
      types: [python]
      files: ^aiperf/common/enums/__init__.py$
      args: [--write, --black, --nomods]
    - id: mkinit messages
      name: Run mkinit messages
      entry: mkinit
      language: system
      types: [python]
      files: ^aiperf/common/messages/__init__.py$
      args: [--write, --black, --nomods]
    - id: mkinit config
      name: Run mkinit on config files
      entry: mkinit
      language: system
      types: [python]
      files: ^aiperf/common/config/__init__.py$
      args: [--write, --black, --nomods]
